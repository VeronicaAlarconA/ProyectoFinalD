name: Build and push Docker image to Nexus and deploy on EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: fastapi_app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # üîç Configurar Python y ejecutar pruebas autom√°ticas
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies for testing
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run automated tests with pytest
      run: |
        pytest tests/ --tb=short -v

    # üê≥ Configuraci√≥n para Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # üîê Login en Nexus
    - name: Log in to Nexus Docker Registry
      run: |
        echo "${{ secrets.NEXUS_PASSWORD }}" | docker login http://${{ secrets.NEXUS_URL }} -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin

    # üèóÔ∏è Build de la imagen Docker
    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.NEXUS_URL }}/docker-hosted/${{ env.IMAGE_NAME }}:latest .

    # üöÄ Push a Nexus
    - name: Push Docker image to Nexus
      run: |
        docker push ${{ secrets.NEXUS_URL }}/docker-hosted/${{ env.IMAGE_NAME }}:latest

    # üîë Acceso por SSH a EC2
    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Add EC2 to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    # üìÅ Enviar archivos necesarios a EC2
    - name: Copy necessary project files to EC2
      run: |
        rsync -avz --exclude='.git' --exclude='.github' -e ssh ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/store-api-devops

    # ‚öôÔ∏è Desplegar en EC2 usando Docker Compose
    - name: Deploy on EC2
      env:
        NEXUS_URL: ${{ secrets.NEXUS_URL }}
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: |
        ssh ubuntu@${{ secrets.EC2_HOST }} << EOF
          export NEXUS_URL=$NEXUS_URL
          export NEXUS_USERNAME=$NEXUS_USERNAME
          export NEXUS_PASSWORD=$NEXUS_PASSWORD

          cd /home/ubuntu/store-api-devops

          echo "‚û°Ô∏è Cerrando contenedores existentes..."
          docker-compose down || true

          echo "üîê Iniciando sesi√≥n en Nexus..."
          docker login http://\$NEXUS_URL -u \$NEXUS_USERNAME -p \$NEXUS_PASSWORD

          echo "üì• Descargando la √∫ltima imagen..."
          docker pull \$NEXUS_URL/docker-hosted/${{ env.IMAGE_NAME }}:latest

          echo "üöÄ Iniciando aplicaci√≥n..."
          docker-compose up -d --build
        EOF
