name: Build and push Docker image to Nexus and deploy on EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: fastapi_app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Allow insecure Nexus registry (HTTP)
      run: |
        echo '{ "insecure-registries":["${{ secrets.NEXUS_URL }}"] }' | sudo tee /etc/docker/daemon.json
        sudo systemctl restart docker

    - name: Log in to Nexus Docker Registry
      run: |
       echo "${{ secrets.NEXUS_PASSWORD }}" | docker login http://ec2-3-91-144-167.compute-1.amazonaws.com:8083 -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin


    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.NEXUS_URL }}/docker-hosted/${{ env.IMAGE_NAME }}:latest .

    - name: Push Docker image to Nexus
      run: |
        docker push ${{ secrets.NEXUS_URL }}/docker-hosted/${{ env.IMAGE_NAME }}:latest

    - name: Set up SSH agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Add EC2 to known_hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Copy necessary project files to EC2
      run: |
        rsync -avz --exclude='.git' --exclude='.github' -e ssh ./ ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/store-api-devops

    - name: Deploy on EC2
      env:
        NEXUS_URL: ${{ secrets.NEXUS_URL }}
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      run: |
        ssh ubuntu@${{ secrets.EC2_HOST }} << EOF
          export NEXUS_URL=$NEXUS_URL
          export NEXUS_USERNAME=$NEXUS_USERNAME
          export NEXUS_PASSWORD=$NEXUS_PASSWORD

          cd /home/ubuntu/store-api-devops

          echo "➡️ Cerrando contenedores existentes..."
          docker-compose down || true

          echo "🔐 Iniciando sesión en Nexus..."
          docker login http://\$NEXUS_URL -u \$NEXUS_USERNAME -p \$NEXUS_PASSWORD

          echo "📥 Descargando la última imagen..."
          docker pull \$NEXUS_URL/docker-hosted/${{ env.IMAGE_NAME }}:latest

          echo "🚀 Iniciando aplicación..."
          docker-compose up -d --build
        EOF
